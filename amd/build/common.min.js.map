{"version":3,"file":"common.min.js","sources":["../src/common.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Common helper for mod_forumng.\n *\n * @module mod_forumng/common\n * @copyright 2024 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const androidOS = 'Android';\nexport const iOS = 'iOS';\nexport const otherOS = 'Other';\n\n/**\n * Removes 'px' from the end of a string, if present, and converts it to a number.\n *\n * @param {string} string Text that possibly is a number with 'px' in\n * @return Value as number\n */\nexport const removePX = (string) => {\n    return parseInt(string.replace(/px$/, ''));\n};\n\n/**\n * Simulates click on a link.\n *\n * @param {object} link Thing you want to click on (HTMLElement)\n */\nexport const simulateClick = (link) => {\n    if (link.click) {\n        link.click();\n    } else {\n        let event = new MouseEvent('click', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': true,\n        });\n        link.dispatchEvent(event);\n    }\n};\n\n/**\n * Disables links for a post or whole page. This is used to grey out other options while\n * you are replying to a post.\n *\n * Note that the disable status is remembered at the level of the element, so if you disable\n * it for a post, you should enable it for the same post too, not just the whole page\n * @param {HTMLElement} root Element within which to disable command links\n */\nexport const linksDisable = (root) => {\n    root.linksdisabled = true;\n    const links = document.querySelectorAll('ul.forumng-commands a');\n    links.forEach(link => {\n        link.oldonclick = link.onclick;\n        link.onclick = function() {\n            return false;\n        };\n        link.style.cursor = 'default';\n        link.tabIndex = -1;\n        if (!link.classList.contains('forumng-disabled')) {\n            link.classList.add('forumng-disabled');\n        }\n    });\n};\n\n/**\n * Enables links again after they were disabled.\n *\n * @param {HTMLElement} root Element within which to enable command links\n */\nexport const linksEnable = (root) => {\n    root.linksdisabled = false;\n    const links = document.querySelectorAll('ul.forumng-commands a');\n    links.forEach(link => {\n        if (link.oldonclick) {\n            link.onclick = link.oldonclick;\n            // Wanted to do 'delete' but it crashes ie.\n            link.oldonclick = false;\n        } else {\n            link.onclick = function() {};\n        }\n        link.style.cursor = 'pointer';\n        link.tabIndex = 0;\n        link.className = link.className.replace('forumng-disabled', '');\n    });\n};\n\n/**\n * Scrolls the page so that a given target is at the top.\n *\n * @param {HTMLElement} target Node to scroll to\n * @param {Function} [after] Callback to run after scrolling finishes\n */\nexport const scrollPage = (target, after) => {\n    const scrollTo = target.getBoundingClientRect().top + window.pageYOffset;\n    const scrollDuration = Math.min(0.5, Math.abs(window.scrollY - scrollTo) / 200);\n    const easingFunction = t => t * (2 - t);\n\n    let start = null;\n\n    /**\n     * A step function to perform the scrollpage.\n     *\n     * @param {DOMHighResTimeStamp} timestamp - The current time.\n     */\n    function scrollStep(timestamp) {\n        if (!start) {\n            start = timestamp;\n        }\n        const progress = timestamp - start;\n        const scrollProgress = Math.min(progress / (scrollDuration * 1000), 1);\n        window.scrollTo(0, window.scrollY + (scrollTo - window.scrollY) * easingFunction(scrollProgress));\n\n        if (scrollProgress < 1) {\n            window.requestAnimationFrame(scrollStep);\n        } else if (after) {\n            after();\n        }\n    }\n\n    window.requestAnimationFrame(scrollStep);\n};\n\n/**\n * Document width.\n *\n * @return {number} The current width of the document\n */\nexport const getDocWidth = () => {\n    return Math.max(\n        document.documentElement.clientWidth,\n        document.documentElement.scrollWidth,\n        document.documentElement.offsetWidth,\n        document.body.scrollWidth,\n        document.body.offsetWidth,\n    );\n};\n\n/**\n * Document height.\n *\n * @return {number} The current height of the document\n */\nexport const getDocHeight = () => {\n    return Math.max(\n        document.documentElement.clientHeight,\n        document.documentElement.scrollHeight,\n        document.documentElement.offsetHeight,\n        document.body.scrollHeight,\n        document.body.offsetHeight,\n    );\n};\n\n/**\n * Retrieves the position and dimensions of an element relative to the screen viewport.\n *\n * @param {HTMLElement} element - The element to get the screen position for\n * @returns {Object} An object containing the screen position and dimensions of the element\n * @property {number} top - The top position of the element relative to the screen\n * @property {number} left - The left position of the element relative to the screen\n * @property {number} bottom - The bottom position of the element relative to the screen\n * @property {number} right - The right position of the element relative to the screen\n * @property {number} width - The width of the element\n * @property {number} height - The height of the element\n */\nexport const getElementScreenPosition = (element) => {\n    const rect = element.getBoundingClientRect();\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    return {\n        top: rect.top + scrollTop,\n        left: rect.left + scrollLeft,\n        bottom: rect.bottom + scrollTop,\n        right: rect.right + scrollLeft,\n        width: rect.width,\n        height: rect.height\n    };\n};\n\n/**\n * Retrieves the dimensions and position of the viewport relative to the document.\n *\n * @returns {Object} An object containing the dimensions and position of the viewport\n * @property {number} width - The width of the viewport\n * @property {number} height - The height of the viewport\n * @property {number} top - The vertical scroll position (top edge) of the viewport\n * @property {number} bottom - The vertical scroll position (bottom edge) of the viewport\n * @property {number} left - The horizontal scroll position (left edge) of the viewport\n * @property {number} right - The horizontal scroll position (right edge) of the viewport\n */\nexport const getViewportRegion = () => {\n    var width = window.innerWidth || document.documentElement.clientWidth;\n    var height = window.innerHeight || document.documentElement.clientHeight;\n    var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    return {\n        width: width,\n        height: height,\n        top: scrollTop,\n        bottom: scrollTop + height,\n        left: scrollLeft,\n        right: scrollLeft + width\n    };\n};\n"],"names":["string","parseInt","replace","link","click","event","MouseEvent","window","dispatchEvent","root","linksdisabled","document","querySelectorAll","forEach","oldonclick","onclick","style","cursor","tabIndex","classList","contains","add","className","target","after","scrollTo","getBoundingClientRect","top","pageYOffset","scrollDuration","Math","min","abs","scrollY","start","requestAnimationFrame","scrollStep","timestamp","progress","scrollProgress","t","max","documentElement","clientWidth","scrollWidth","offsetWidth","body","clientHeight","scrollHeight","offsetHeight","element","rect","scrollLeft","pageXOffset","scrollTop","left","bottom","right","width","height","innerWidth","innerHeight"],"mappings":"+YAuByB,uBACN,uBACI,0BAQEA,QACdC,SAASD,OAAOE,QAAQ,MAAO,4BAQZC,UACtBA,KAAKC,MACLD,KAAKC,YACF,KACCC,MAAQ,IAAIC,WAAW,QAAS,MACxBC,gBACG,cACG,IAElBJ,KAAKK,cAAcH,+BAYEI,OACzBA,KAAKC,eAAgB,EACPC,SAASC,iBAAiB,yBAClCC,SAAQV,OACVA,KAAKW,WAAaX,KAAKY,QACvBZ,KAAKY,QAAU,kBACJ,GAEXZ,KAAKa,MAAMC,OAAS,UACpBd,KAAKe,UAAY,EACZf,KAAKgB,UAAUC,SAAS,qBACzBjB,KAAKgB,UAAUE,IAAI,6CAUHZ,OACxBA,KAAKC,eAAgB,EACPC,SAASC,iBAAiB,yBAClCC,SAAQV,OACNA,KAAKW,YACLX,KAAKY,QAAUZ,KAAKW,WAEpBX,KAAKW,YAAa,GAElBX,KAAKY,QAAU,aAEnBZ,KAAKa,MAAMC,OAAS,UACpBd,KAAKe,SAAW,EAChBf,KAAKmB,UAAYnB,KAAKmB,UAAUpB,QAAQ,mBAAoB,4BAU1C,CAACqB,OAAQC,eACzBC,SAAWF,OAAOG,wBAAwBC,IAAMpB,OAAOqB,YACvDC,eAAiBC,KAAKC,IAAI,GAAKD,KAAKE,IAAIzB,OAAO0B,QAAUR,UAAY,SAGvES,MAAQ,KAsBZ3B,OAAO4B,gCAfEC,WAAWC,WACXH,QACDA,MAAQG,iBAENC,SAAWD,UAAYH,MACvBK,eAAiBT,KAAKC,IAAIO,UAA6B,IAAjBT,gBAAwB,GAdjDW,IAAAA,EAenBjC,OAAOkB,SAAS,EAAGlB,OAAO0B,SAAWR,SAAWlB,OAAO0B,WAfpCO,EAe8DD,iBAfpD,EAAIC,KAiB7BD,eAAiB,EACjBhC,OAAO4B,sBAAsBC,YACtBZ,OACPA,iCAYe,IAChBM,KAAKW,IACR9B,SAAS+B,gBAAgBC,YACzBhC,SAAS+B,gBAAgBE,YACzBjC,SAAS+B,gBAAgBG,YACzBlC,SAASmC,KAAKF,YACdjC,SAASmC,KAAKD,mCASM,IACjBf,KAAKW,IACR9B,SAAS+B,gBAAgBK,aACzBpC,SAAS+B,gBAAgBM,aACzBrC,SAAS+B,gBAAgBO,aACzBtC,SAASmC,KAAKE,aACdrC,SAASmC,KAAKG,gDAgBmBC,gBAC/BC,KAAOD,QAAQxB,wBACf0B,WAAa7C,OAAO8C,aAAe1C,SAAS+B,gBAAgBU,WAC5DE,UAAY/C,OAAOqB,aAAejB,SAAS+B,gBAAgBY,gBAE1D,CACH3B,IAAKwB,KAAKxB,IAAM2B,UAChBC,KAAMJ,KAAKI,KAAOH,WAClBI,OAAQL,KAAKK,OAASF,UACtBG,MAAON,KAAKM,MAAQL,WACpBM,MAAOP,KAAKO,MACZC,OAAQR,KAAKQ,oCAeY,SACzBD,MAAQnD,OAAOqD,YAAcjD,SAAS+B,gBAAgBC,YACtDgB,OAASpD,OAAOsD,aAAelD,SAAS+B,gBAAgBK,aACxDK,WAAa7C,OAAO8C,aAAe1C,SAAS+B,gBAAgBU,WAC5DE,UAAY/C,OAAOqB,aAAejB,SAAS+B,gBAAgBY,gBAExD,CACHI,MAAOA,MACPC,OAAQA,OACRhC,IAAK2B,UACLE,OAAQF,UAAYK,OACpBJ,KAAMH,WACNK,MAAOL,WAAaM"}