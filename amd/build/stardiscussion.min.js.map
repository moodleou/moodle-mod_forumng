{"version":3,"file":"stardiscussion.min.js","sources":["../src/stardiscussion.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {linksDisable, linksEnable} from 'mod_forumng/common';\nimport Url from 'core/url';\nimport Config from 'core/config';\n\n/**\n * JavaScript to handle star discussion.\n *\n * @module mod_forumng/stardiscussion\n * @copyright 2024 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport class StarDiscussion {\n    /** @var {string} cloneParam Clone id in param */\n    cloneParam = '';\n\n    /** @var {Number} ratingStars The number of stars (1-5) used for ratings */\n    ratingStars = 0;\n\n    /** @var {string} loaderPix URL of AJAX loader icon */\n    loaderPix = '';\n\n    /** @var {object} stringList List of strings */\n    stringList = {};\n\n    /** @var {Object} starPix Object containing multiple URLs of the various star icons */\n    starPix = {};\n\n    /**\n     * Class constructor\n     *\n     * @param {object} options Options for ajax request\n     */\n    constructor(options) {\n        this.cloneParam = options.cloneParam;\n        this.ratingStars = options.ratingStars;\n        this.loaderPix = options.loaderPix;\n        this.stringList = options.stringList;\n        this.starPix = options.starPix;\n    }\n\n    /**\n     * Initialises rating div, either by turning the standard dropdown into an AJAX one with\n     * its own button, or else by turning it into a number of stars.\n     *\n     * @param {HTMLElement} div  Rating div\n     */\n    initRating(div) {\n        div.classList.add('forumng-ratings-jsenabled');\n        div.post = div.closest('.forumng-post');\n        div.ratingCount = 0;\n\n        // If there is a select (=user allowed to edit rating), get it and use it to get detail\n        // about current rating.\n        const selects = div.querySelectorAll('select');\n        if (selects.length > 0) {\n            div.selector = selects[0];\n            div.postId = parseInt(div.selector.name.replace(/^rating/, ''));\n            div.userRating = div.selector.value;\n            div.canRate = true;\n            div.hasUserRating = div.userRating !== 999;\n        }\n\n        // If there is information about the current average rating (in a strong tag), get this\n        // (there might not be, if rating is not displayed).\n        const strongs = div.querySelectorAll('strong');\n        if (strongs.length > 0) {\n            const strong = strongs[0];\n            div.publicRatingValue = strong.firstChild.nodeValue;\n            div.publicRating = parseInt(div.publicRatingValue.replace(/\\s*\\/.*$/,''));\n            div.postId = parseInt(strong.id.replace(/^rating_for_/, ''));\n            div.hasPublicRating = true;\n            div.ratingCount = parseInt(strong.parentNode.querySelector('span').firstChild.nodeValue);\n        }\n\n        div.canView = div.classList.contains('forumng-canview');\n\n        if (this.ratingStars) {\n            // Get rid of everything inside the area and replace it with magic stars.\n            for (const node of div.childNodes) {\n                node.remove();\n            }\n            div.starSpan = document.createElement('span');\n            div.appendChild(div.starSpan);\n            div.stars = [];\n            for (let i = 0; i <= this.ratingStars; i++) {\n                const star = document.createElement('img');\n                star.setAttribute('width', '16');\n                star.setAttribute('height', '16');\n                star.rating = i;\n                star.setAttribute('alt', i.toString());\n                if (div.canRate) {\n                    this.starInitEvents(div, star);\n                }\n                div.starSpan.appendChild(star);\n                div.stars.push(star);\n            }\n\n            // Set up number of votes.\n            div.countSpan = document.createElement('span');\n            div.appendChild(div.countSpan);\n\n            // Set initial star value.\n            this.setStars(div);\n            return null;\n        } else {\n            // No stars, add AJAX to dropdown.\n            if (!div.selector) {\n                return null;\n            }\n            // We move the logic to create the submit rate button to main.js and call initContent after a successful AJAX request.\n            return div;\n        }\n    }\n\n    /**\n     * Initializes events on a single star.\n     * @param {HTMLElement} div Main rating div\n     * @param {HTMLElement} star This star\n     */\n    starInitEvents(div, star) {\n        star.setAttribute('tabIndex', 0);\n\n        star.clickFunction = () => {\n            div.newRating = star.rating;\n            if (div.hasUserRating && div.userRating == div.newRating) {\n                div.newRating = 999;\n            }\n            const url = `${Config.wwwroot}/mod/forumng/rate.php`;\n            const data = `p=${div.postId}${this.cloneParam}&rating=${div.newRating}&ajax=1`;\n            const cfg = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            };\n\n            fetch(url + '?' + data, cfg)\n                .then(response => response.text())\n                .then(text => {\n                    this.starOk(div, { responseText: text });\n                })\n                .catch(() => {\n                    this.deleteError(div);\n                })\n                .finally(() => {\n                    linksDisable(div.post);\n                    star.setAttribute('src', this.loaderPix);\n                });\n        };\n\n        star.addEventListener('click', star.clickFunction);\n\n        star.addEventListener('keypress', (e) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n                star.clickFunction(e);\n            }\n        });\n\n        star.addEventListener('focus', () => {\n            star.classList.add('forumng-starfocus');\n        });\n\n        star.addEventListener('blur', () => {\n            star.classList.remove('forumng-starfocus');\n        });\n\n        star.addEventListener('mouseover', () => {\n            div.hasTempRating = true;\n            div.tempRating = star.rating;\n            this.setStars(div);\n        });\n\n        star.addEventListener('mouseout', () => {\n            div.hasTempRating = false;\n            this.setStars(div);\n        });\n    }\n\n    /**\n     * Updates stars according to current rating values.\n     *\n     * @param {HTMLElement} div Main ratings div\n     */\n    setStars(div) {\n        let userPos, publicPos;\n        let clearing = false;\n\n        if (div.hasTempRating) {\n            if (div.hasUserRating && div.tempRating == div.userRating) {\n                clearing = true;\n                userPos = -1;\n            } else {\n                userPos = div.tempRating;\n            }\n        } else {\n            userPos = div.hasUserRating ? div.userRating : -1;\n        }\n\n        publicPos = div.hasPublicRating ? div.publicRating : -1;\n\n        for (let i = 0; i < div.stars.length; i++) {\n            const user = i == userPos;\n            const pub = i <= publicPos;\n            const key = (i == 0 ? 'circle-' : 'star-') + (user ? 'y' : 'n') + \"-\" + (pub ? 'y' : 'n');\n            div.stars[i].src = Url.imageUrl(this.starPix[key], 'forumng');\n        }\n\n        if (div.ratingCount) {\n            const newText = ' ' + (div.ratingCount == 1 ? this.stringList.js_nratings1 :\n                this.stringList.js_nratings.replace(/#/, div.ratingCount));\n            let existing = div.countSpan.firstChild;\n            if (existing) {\n                if (existing.nodeValue !== newText) {\n                    existing.remove();\n                    existing = null;\n                }\n            }\n            if (!existing) {\n                div.countSpan.appendChild(document.createTextNode(newText));\n            }\n        }\n\n        let title = clearing ? this.stringList.js_clicktoclearrating :\n            div.tempRating == 1 ? this.stringList.js_clicktosetrating1 :\n                this.stringList.js_clicktosetrating.replace(/#/, div.tempRating);\n\n        if (div.canView) {\n            if (!div.hasPublicRating) {\n                title += ' ' + this.stringList.js_nopublicrating;\n            } else {\n                title += ' ' + this.stringList.js_publicrating.replace(/#/, div.publicRating);\n            }\n        }\n\n        if (div.canRate) {\n            if (!div.hasUserRating) {\n                title += ' ' + this.stringList.js_nouserrating;\n            } else {\n                title += ' ' + this.stringList.js_userrating.replace(/#/, div.userRating);\n            }\n        }\n\n        title += ' ' + this.stringList.js_outof.replace(/#/, this.ratingStars);\n\n        for (const star of div.stars) {\n            star.title = title.trim();\n        }\n    }\n\n    /**\n     * Handles the AJAX response for a star-click rating event.\n     *\n     * @param {HTMLElement} div - The main rating div.\n     * @param {Object} response - The fetch API response object.\n     */\n    starOk(div, response) {\n        linksEnable(div.post);\n        div.userRating = div.newRating;\n        div.hasUserRating = div.newRating !== 999;\n\n        const ratingRegex = /<strong id=\"rating_for_[0-9]+\">([0-9]+) \\//;\n        // Use response.text() to access response body.\n        const ratingMatch = ratingRegex.exec(response.responseText);\n\n        if (ratingMatch) {\n            div.publicRating = ratingMatch[1];\n            div.hasPublicRating = true;\n        } else {\n            div.hasPublicRating = false;\n            div.ratingCount = 0;\n        }\n\n        const countRegex = /<span class=\"forumng-count\">([0-9]+)<\\/span>/;\n        const countMatch = countRegex.exec(response.responseText);\n        if (countMatch) {\n            div.ratingCount = parseInt(countMatch[1]);\n        }\n\n        this.setStars(div);\n    }\n\n    /**\n     * AJAX response: Delete fails / Set rating fails.\n     *\n     * @param {Object} div div (for rating), which contains a '.post' variable\n     */\n    deleteError(div) {\n        if (div.loader) {\n            div.loader.remove();\n        }\n        linksEnable(div.post);\n        alert(this.stringList.jserr_alter);\n    }\n}\n"],"names":["constructor","options","cloneParam","ratingStars","loaderPix","stringList","starPix","initRating","div","classList","add","post","closest","ratingCount","selects","querySelectorAll","length","selector","postId","parseInt","name","replace","userRating","value","canRate","hasUserRating","strongs","strong","publicRatingValue","firstChild","nodeValue","publicRating","id","hasPublicRating","parentNode","querySelector","canView","contains","this","node","childNodes","remove","starSpan","document","createElement","appendChild","stars","i","star","setAttribute","rating","toString","starInitEvents","push","countSpan","setStars","clickFunction","newRating","url","Config","wwwroot","data","fetch","method","headers","then","response","text","starOk","responseText","catch","deleteError","finally","addEventListener","e","key","hasTempRating","tempRating","userPos","publicPos","clearing","src","Url","imageUrl","newText","js_nratings1","js_nratings","existing","createTextNode","title","js_clicktoclearrating","js_clicktosetrating1","js_clicktosetrating","js_publicrating","js_nopublicrating","js_userrating","js_nouserrating","js_outof","trim","ratingMatch","exec","countMatch","loader","alert","jserr_alter"],"mappings":"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"}